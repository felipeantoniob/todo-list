import { motion } from 'framer-motion'
import Head from 'next/head'
import { useEffect, useMemo, useRef, useState } from 'react'
import { Container, Row } from 'react-bootstrap'

import { fadeInUp } from '../animations/index'
import TodoForm from '../components/TodoForm'
import TodoList from '../components/TodoList'
import { TodoProps, FilterType as FilterType } from '../interfaces'

let didInit = false

export default function Home(): JSX.Element {
  const [todos, setTodos] = useState<TodoProps[]>([])
  const [filter, setFilter] = useState<FilterType>('all')
  const [editTodo, setEditTodo] = useState<TodoProps | null>(null)
  const [input, setInput] = useState('')

  const todoInputRef = useRef<HTMLInputElement | null>(null)

  useEffect(() => {
    if (!didInit) {
      didInit = true
      setTodos(() => getLocalTodos())
      todoInputRef.current!.focus()
    }
  }, [])

  const getLocalTodos = (): TodoProps[] => {
    if (localStorage.getItem('todos') === null) {
      localStorage.setItem('todos', JSON.stringify([]))
      return []
    } else {
      const localTodos = JSON.parse(String(localStorage?.getItem('todos')))
      return localTodos
    }
  }

  const getFilteredTodos = (todos: TodoProps[], filter: string) => {
    switch (filter) {
      case 'completed':
        return todos.filter((todo) => todo.completed === true)
      case 'uncompleted':
        return todos.filter((todo) => todo.completed === false)
      default:
        return todos
    }
  }

  const visibleTodos = useMemo(() => getFilteredTodos(todos, filter), [todos, filter])

  const saveLocalTodos = useMemo(() => {
    if (typeof window !== 'undefined' && todos.length > 0) {
      localStorage.setItem('todos', JSON.stringify(todos))
    }
  }, [todos])

  return (
    <>
      <Head>
        <title>To-Do List</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="dark-mode">
        <motion.div initial="initial" animate="animate" exit={{ opacity: 0 }}>
          <Container className="min-vh-100 pb-5">
            <motion.div initial="initial" animate="animate" variants={fadeInUp}>
              <Row className="justify-content-center mb-5"></Row>
              <Row className="justify-content-center align-items-center mb-5">
                <TodoForm
                  editTodo={editTodo}
                  todos={todos}
                  setTodos={setTodos}
                  setStatus={setFilter}
                  setEditTodo={setEditTodo}
                  todoInputRef={todoInputRef}
                  input={input}
                  setInput={setInput}
                />
              </Row>
            </motion.div>
            <Row className="px-2">
              {/* TODO: Fix list items exit animations */}
              <TodoList
                editTodo={editTodo}
                setTodos={setTodos}
                todos={todos}
                visibleTodos={visibleTodos}
                setEditTodo={setEditTodo}
                setInput={setInput}
                todoInputRef={todoInputRef}
              />
            </Row>
          </Container>
        </motion.div>
      </main>
    </>
  )
}
